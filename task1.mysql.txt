Enter password: ****
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 17
Server version: 8.0.41 MySQL Community Server - GPL

Copyright (c) 2000, 2025, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SHOW DATABASE
    -> SHOW DATABASE;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DATABASE
SHOW DATABASE' at line 1
mysql> show database;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database' at line 1
mysql> help

For information about MySQL products and services, visit:
   http://www.mysql.com/
For developer information, including the MySQL Reference Manual, visit:
   http://dev.mysql.com/
To buy MySQL Enterprise support, training, or other products, visit:
   https://shop.mysql.com/

List of all MySQL commands:
Note that all text commands must be first on line and end with ';'
?         (\?) Synonym for `help'.
clear     (\c) Clear the current input statement.
connect   (\r) Reconnect to the server. Optional arguments are db and host.
delimiter (\d) Set statement delimiter.
ego       (\G) Send command to mysql server, display result vertically.
exit      (\q) Exit mysql. Same as quit.
go        (\g) Send command to mysql server.
help      (\h) Display this help.
notee     (\t) Don't write into outfile.
print     (\p) Print current command.
prompt    (\R) Change your mysql prompt.
quit      (\q) Quit mysql.
rehash    (\#) Rebuild completion hash.
source    (\.) Execute an SQL script file. Takes a file name as an argument.
status    (\s) Get status information from the server.
system    (\!) Execute a system shell command, if enabled
tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.
use       (\u) Use another database. Takes database name as argument.
charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.
warnings  (\W) Show warnings after every statement.
nowarning (\w) Don't show warnings after every statement.
resetconnection(\x) Clean session context.
query_attributes Sets string parameters (name1 value1 name2 value2 ...) for the next query to pick up.
ssl_session_data_print Serializes the current SSL session data to stdout or file

For server side help, type 'help contents'

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| demodb             |
| ecommercedb        |
| information_schema |
| lohi               |
| mysql              |
| nominalrolldb      |
| performance_schema |
| sakila             |
| sys                |
| testdb             |
| usrdb              |
| world              |
+--------------------+
12 rows in set (0.01 sec)

mysql> create database prasanna;
Query OK, 1 row affected (0.01 sec)

mysql> CREATE TABLE employees (
    ->     employee_id INT PRIMARY KEY,
    ->     name VARCHAR(100),
    ->     department_id INT
    -> );

Database changed
mysql> CREATE TABLE Employees (    EmployeeID INT PRIMARY KEY,    FirstName VARCHAR(50),    LastName VARCHAR(50),    DepartmentID INT,    Salary DECIMAL(10, 2));
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Departments (    DepartmentID INT PRIMARY KEY,    DepartmentName VARCHAR(50),    Location VARCHAR(50));
Query OK, 0 rows affected (0.03 sec)

mysql> INSERT INTO Employees (EmployeeID, FirstName, LastName, DepartmentID, Salary) VALUES(1, 'John', 'Doe', 1, 60000),(2, 'Jane', 'Smith', 2, 75000),(3, 'David', 'Lee', 1, 65000),(4, 'Sarah', 'Jones', 3, 80000),(5, 'Michael', 'Brown', 2, 70000);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Departments (DepartmentID, DepartmentName, Location) VALUES(1, 'Sales', 'New York'),(2, 'Marketing', 'London'),(3, 'Engineering', 'San Francisco');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> ^C
mysql> INSERT INTO Employees (EmployeeID, FirstName, LastName, DepartmentID, Salary) VALUES(1, 'John', 'Doe', 1, 60000),(2, 'Jane', 'Smith', 2, 75000),(3, 'David', 'Lee', 1, 65000),(4, 'Sarah', 'Jones', 3, 80000),(5, 'Michael', 'Brown', 2, 70000);

mysql> SELECT*FROM employees WHERE employeeID=1;
+------------+-----------+----------+--------------+----------+
| EmployeeID | FirstName | LastName | DepartmentID | Salary   |
+------------+-----------+----------+--------------+----------+
|          1 | John      | Doe      |            1 | 60000.00 |
+------------+-----------+----------+--------------+----------+
1 row in set (0.00 sec)

mysql> INSERT INTO Employees (EmployeeID, FirstName, LastName, DepartmentID, Salary) VALUES(1, 'John', 'Doe', 1, 60000),(2, 'Jane', 'Smith', 2, 75000),(3, 'David', 'Lee', 1, 55000),(4, 'Sarah', 'Jones', 3, 80000),(5, 'Michael', 'Brown', NULL, 65000); -- Employee without a department

mysql> SELECT*FROM Employees;
+------------+-----------+----------+--------------+----------+
| EmployeeID | FirstName | LastName | DepartmentID | Salary   |
+------------+-----------+----------+--------------+----------+
|          1 | John      | Doe      |            1 | 60000.00 |
|          2 | Jane      | Smith    |            2 | 75000.00 |
|          3 | David     | Lee      |            1 | 65000.00 |
|          4 | Sarah     | Jones    |            3 | 80000.00 |
|          5 | Michael   | Brown    |            2 | 70000.00 |
+------------+-----------+----------+--------------+----------+
5 rows in set (0.00 sec)


mysql> SELECT *FROM Departments;
+--------------+----------------+---------------+
| DepartmentID | DepartmentName | Location      |
+--------------+----------------+---------------+
|            1 | Sales          | New York      |
|            2 | Marketing      | London        |
|            3 | Engineering    | San Francisco |
+--------------+----------------+---------------+
3 rows in set (0.00 sec)

mysql> SELECT e.EmployeeID, e.FirstName, e.LastName, d.DepartmentName, d.Location FROM Employees e INNER JOIN Departments d ON e.DepartmentID = d.DepartmentID;
+------------+-----------+----------+----------------+---------------+
| EmployeeID | FirstName | LastName | DepartmentName | Location      |
+------------+-----------+----------+----------------+---------------+
|          1 | John      | Doe      | Sales          | New York      |
|          2 | Jane      | Smith    | Marketing      | London        |
|          3 | David     | Lee      | Sales          | New York      |
|          4 | Sarah     | Jones    | Engineering    | San Francisco |
|          5 | Michael   | Brown    | Marketing      | London        |
+------------+-----------+----------+----------------+---------------+
5 rows in set (0.00 sec)

mysql> SELECT e.EmployeeID, e.FirstName, e.LastName, d.DepartmentName, d.Location FROM Employees e RIGHT JOIN Departments d ON e.DepartmentID = d.DepartmentID;
+------------+-----------+----------+----------------+---------------+
| EmployeeID | FirstName | LastName | DepartmentName | Location      |
+------------+-----------+----------+----------------+---------------+
|          3 | David     | Lee      | Sales          | New York      |
|          1 | John      | Doe      | Sales          | New York      |
|          5 | Michael   | Brown    | Marketing      | London        |
|          2 | Jane      | Smith    | Marketing      | London        |
|          4 | Sarah     | Jones    | Engineering    | San Francisco |
+------------+-----------+----------+----------------+---------------+
5 rows in set (0.00 sec)

mysql> SELECT e.EmployeeID, e.FirstName, e.LastName, d.DepartmentName, d.Location FROM Employees e LEFT JOIN Departments d ON e.DepartmentID = d.DepartmentID;
+------------+-----------+----------+----------------+---------------+
| EmployeeID | FirstName | LastName | DepartmentName | Location      |
+------------+-----------+----------+----------------+---------------+
|          1 | John      | Doe      | Sales          | New York      |
|          2 | Jane      | Smith    | Marketing      | London        |
|          3 | David     | Lee      | Sales          | New York      |
|          4 | Sarah     | Jones    | Engineering    | San Francisco |
|          5 | Michael   | Brown    | Marketing      | London        |
+------------+-----------+----------+----------------+---------------+
5 rows in set (0.00 sec)

mysql> SELECT e.EmployeeID, e.FirstName, e.LastName, d.DepartmentName, d.Location FROM Employees e LEFT JOIN Departments d ON e.DepartmentID = d.DepartmentID UNION SELECT e.EmployeeID, e.FirstName, e.LastName, d.DepartmentName, d.Location FROM Employees e RIGHT JOIN Departments d ON e.DepartmentID = d.DepartmentID;
+------------+-----------+----------+----------------+---------------+
| EmployeeID | FirstName | LastName | DepartmentName | Location      |
+------------+-----------+----------+----------------+---------------+
|          1 | John      | Doe      | Sales          | New York      |
|          2 | Jane      | Smith    | Marketing      | London        |
|          3 | David     | Lee      | Sales          | New York      |
|          4 | Sarah     | Jones    | Engineering    | San Francisco |
|          5 | Michael   | Brown    | Marketing      | London        |
+------------+-----------+----------+----------------+---------------+
5 rows in set (0.00 sec)

mysql>